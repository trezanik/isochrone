#!/bin/sh
# CMake fix: changes into subdirectory, breaking relative paths. cd to the script dir, restore on quit
cwd=`pwd`
cd "$(dirname "$0")"

git_remote_origin=`git remote get-url origin`
git_commit_hash=`git log -n 1 --pretty=format:'%H'`  # full hash
git_abbrev_hash=`git log -n 1 --pretty=format:'%h'`  # 1234567
git_author=`git log -n 1 --format=format:"%an <%ae>"`  # Name Name <mail>
git_date=`git log -n 1 --format=format:"%ad" --date=short`  # Commit date (date only)

# based on no untracked files
if git status -uno | grep -q 'nothing to commit'; then
	dirty=false
else
	dirty=true
fi


# BitBucket = <username>/<repo>/commits/<commit_hash>
# GitHub    = <username>/<repo>/commit/<commit_hash>
# GitLab    = <username>/<repo>/-/commit/<commit_hash>
#git_remote_origin=`echo $git_remote_origin | sed -e "s/\.git/\/-\/commit\//g"` # GitLab
git_remote_origin=`echo $git_remote_origin | sed -e "s/\.git/\/commit\//g"` # GitHub
git_remote_origin=`echo "${git_remote_origin}${git_commit_hash}"`

for ns in app core engine imgui
do
cat << EOF > src/$ns/version.h
#pragma once

// This file is automatically generated with each build; any changes will be lost!

#include <string>
#include "version.tt"

namespace trezanik {
namespace $ns {
#define TZK_PROJECT_PROD_VER  TZK_STRINGIFY(TZK_PROJECT_VERSION_MAJOR) "." TZK_STRINGIFY(TZK_PROJECT_VERSION_MINOR) ".$git_date.$git_abbrev_hash"

	const std::string  url = "$git_remote_origin";
	const std::string  file_version = TZK_STRINGIFY(TZK_PROJECT_VERSION_MAJOR) "." TZK_STRINGIFY(TZK_PROJECT_VERSION_MINOR);
	const std::string  product_version = TZK_PROJECT_PROD_VER;
	const std::string  copyright = "$git_author";
	const bool         dirty = $dirty;
} // namespace $ns
} // namespace trezanik
EOF
done

# to support the version info into the meson 'project', we'll extract the 'app'
# version and echo to stdout.
# Assumes MAJOR and MINOR definitions on sequential lines
# Example output: 1.0
cat src/app/version.tt | awk '{ print $3 }' | tr '\n' '.' | sed 's/.$//'

cd $cwd
exit 0

